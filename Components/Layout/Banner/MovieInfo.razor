@using BlazorMovieDB.Models
@using BlazorMovieDB.Utils

<div class="absolute h-full w-full md:w-3/5 flex flex-col gap-4 justify-center px-4 z-10 text-white">
    <div class="font-bold text-lg text-red-500">@PupularTitle</div>
    <div class="font-bold text-4xl">@Movie.Title</div>
    <div class="hidden md:flex gap-2">
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="white" class="w-6 h-6">
            <path stroke-linecap="round" stroke-linejoin="round" d="M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 012.25-2.25h13.5A2.25 2.25 0 0121 7.5v11.25m-18 0A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75m-18 0v-7.5A2.25 2.25 0 015.25 9h13.5A2.25 2.25 0 0121 11.25v7.5m-9-6h.008v.008H12v-.008zM12 15h.008v.008H12V15zm0 2.25h.008v.008H12v-.008zM9.75 15h.008v.008H9.75V15zm0 2.25h.008v.008H9.75v-.008zM7.5 15h.008v.008H7.5V15zm0 2.25h.008v.008H7.5v-.008zm6.75-4.5h.008v.008h-.008v-.008zm0 2.25h.008v.008h-.008V15zm0 2.25h.008v.008h-.008v-.008zm2.25-4.5h.008v.008H16.5v-.008zm0 2.25h.008v.008H16.5V15z" />
        </svg>
        <div>@GetFormatedReleaseDate</div>
    </div>
    <div class="hidden md:flex">@Movie.Overview</div>
    <div class="hidden md:flex gap-2">
        <GenreBadges Genres=@Genres />
    </div>
    <div>
        <NavLink href=@MoviePageLink class="rounded-full w-[100px] bg-red-500 font-bold py-2 px-4 flex items-center gap-1">
                Detail
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="4" stroke="currentColor" class="w-4 h-4">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M8.25 4.5l7.5 7.5-7.5 7.5" />
                </svg>
        </NavLink>
    </div>
</div>

@code {
    [Parameter, EditorRequired]
    public required Movie Movie { get; set; }

    [Parameter, EditorRequired]
    public required int Index { get; set; }

    public string MoviePageLink => $"/movie/{Movie.Id}";

	private string PupularTitle => $"#{Index + 1} Popular";

    private string GetFormatedReleaseDate => Utils.GetFormatedDate(Movie.ReleaseDate);
    
    private string[] Genres => Movie.GenreIds
        .Select(x => Utils.GenresDictionary.TryGetValue(x, out string? genre) ? genre : string.Empty)
        .Where(x => !string.IsNullOrEmpty(x))
		.ToArray();
}
